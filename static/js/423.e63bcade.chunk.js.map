{"version":3,"file":"static/js/423.e63bcade.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Layout.styled.jsx","pages/Contacts.js"],"sourcesContent":["import { Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const Button = styled.button`\n  width: 160px;\n  font-size: 16px;\n  padding: 8px 16px;\n\n  border: outset;\n  border-radius: 8px;\n  background-color: #f3f3f3ef;\n  cursor: pointer;\n  transition: background-color 250ms linear, border 200ms linear,\n    color 50ms linear;\n  &:hover {\n    background-color: #d3d3d3cc;\n  }\n  &:active {\n    border: inset;\n    color: #f3f3f3;\n    background-color: #75757597;\n  }\n`;\n\nexport const Input = styled(Field)`\n  width: 600px;\n  display: flex;\n  justify-content: space-around;\n  gap: 32px;\n  padding: 8px 16px;\n  margin: 8px 0;\n  border: groove;\n  border-radius: 8px;\n  background-color: #f7f7f7c5;\n`;\n","import { Formik, Form } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Input } from './ContactForm.styled';\nimport { addContacts } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/selectors';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const addNewContact = newContact => {\n    dispatch(addContacts(newContact));\n  };\n\n  const checkExistingContact = newContact => {\n    const checked = contacts.filter(contact => {\n      return contact.name.toLowerCase() === newContact.name.toLowerCase();\n    });\n    if (checked.length !== 0) {\n      alert(`${newContact.name} is already in contacts`);\n    } else {\n      addNewContact(newContact);\n    }\n  };\n\n  const handleSubmit = ({ name, number }, { resetForm }) => {\n    checkExistingContact({ name, number });\n    resetForm();\n  };\n  return (\n    <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n      <Form autoComplete=\"off\">\n        <label>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            // title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            // required\n          />\n        </label>\n        <label>\n          Phone\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            // title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            // required\n          />\n        </label>\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const DeleteButton = styled.button`\n  width: 80px;\n  font-size: 16px;\n  padding: 8px;\n  margin-left: 32px;\n  border: outset;\n  border-radius: 8px;\n  background-color: #f3f3f3ef;\n  cursor: pointer;\n  transition: background-color 250ms linear, border 200ms linear,\n    color 50ms linear;\n  &:hover {\n    background-color: #d3d3d3cc;\n  }\n  &:active {\n    border: inset;\n    color: #f3f3f3;\n    background-color: #75757597;\n  }\n`;\nexport const Item = styled.li`\n  width: auto;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  font-size: 16px;\n  padding: 8px 16px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border: 1px inset #d3d3d3cc;\n  background-color: #6f6f6f28;\n  border-radius: 8px;\n  gap: 8px;\n`;\n\nexport const FullName = styled.p`\n  font-weight: 600;\n`;\n\nexport const Number = styled.span`\n  margin-left: auto;\n  font-weight: 600;\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { DeleteButton, FullName, Item, Number } from './ContactItem.styled';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ContactItem = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  let newStr = contact.name\n    .split(' ')\n    .map(str => {\n      return str[0].toUpperCase() + str.toLowerCase().slice(1);\n    })\n    .join(' ');\n\n  return (\n    <Item id={contact.id}>\n      <FullName>{newStr}:</FullName>\n      <Number>{contact.number}</Number>\n      <DeleteButton\n        type=\"button\"\n        onClick={() => dispatch(deleteContact(contact.id))}\n      >\n        Delete\n      </DeleteButton>\n    </Item>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({}),\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  width: 600px;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  /* margin-left: auto;\n  margin-right: auto; */\n`;\n","import { ContactItem } from 'components/ContactItem/ContactItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { List } from './ContactList.styled';\nimport {\n  selectContacts,\n  selectFilters,\n  selectIsLoading,\n  selectError,\n} from 'redux/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilters);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const getFilterContacts = () => {\n    const normalizedFilter = filter.toLowerCase().trim();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  return (\n    <>\n      {isLoading && <p>Loading contacts...</p>}\n      {error && <p>{error}</p>}\n      <List>\n        {contacts.length > 0 &&\n          getFilterContacts().map(contact => {\n            return (\n              <ContactItem contact={contact} key={contact.id}></ContactItem>\n            );\n          })}\n      </List>{' '}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  width: 600px;\n  display: flex;\n  justify-content: space-around;\n  gap: 32px;\n  padding: 8px 16px;\n  margin: 8px 0;\n  border: groove;\n  border-radius: 8px;\n  background-color: #f7f7f7c5;\n`;\n","import { Input } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsFilter } from 'redux/filter/filterSlice';\nimport { selectFilters } from 'redux/selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilters);\n\n  const filterContact = e => {\n    dispatch(contactsFilter(e.target.value));\n  };\n\n  return (\n    <label>\n      Filter\n      <Input type=\"text\" onChange={filterContact} value={filter} />\n    </label>\n  );\n};\n","import styled from 'styled-components';\n\nexport const HeroTitle = styled.h1`\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n  font-size: 32px;\n  margin: 0;\n`;\n\nexport const Title = styled.h2`\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n  font-size: 24px;\n  margin: 0;\n`;\n","import { Container } from '@mui/material';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { HeroTitle, Title } from 'components/Layout.styled';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\n// import { HeroTitle, Title } from 'components/Layout';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <Container sx={{ marginTop: 4 }}>\n      <HeroTitle>Phonebook</HeroTitle>\n      <ContactForm />\n      <Title>Contacts</Title>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\n"],"names":["Button","styled","Input","Field","initialValues","name","number","ContactForm","contacts","useSelector","selectContacts","dispatch","useDispatch","checkExistingContact","newContact","filter","contact","toLowerCase","length","alert","addContacts","addNewContact","onSubmit","resetForm","autoComplete","type","DeleteButton","Item","FullName","Number","ContactItem","newStr","split","map","str","toUpperCase","slice","join","id","onClick","deleteContact","List","ContactList","selectFilters","isLoading","selectIsLoading","error","selectError","useEffect","fetchContacts","normalizedFilter","trim","includes","getFilterContacts","Filter","onChange","e","contactsFilter","target","value","HeroTitle","Title","Contacts","Container","sx","marginTop"],"sourceRoot":""}